@page "/category/edit"
@page "/category/edit/{id:int?}"
@inject PartsBdContext DbContext
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Forms
@using WebAppMinimalPartsUnlimit2.Entities
@using WebAppMinimalPartsUnlimit2.Entities.Dtos
@using WebAppMinimalPartsUnlimit2.Entities.Models

<h3>Edit Category</h3>

<EditForm Model="categoryDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary /> 

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="categoryDto.Name" />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" class="form-control" @bind-Value="categoryDto.Description" />
    </div>
    <div class="form-group">
        <label for="imageUrl">Image URL</label>
        <InputText id="imageUrl" class="form-control" @bind-Value="categoryDto.ImageUrl" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    private CategoryCreateDto categoryDto = new CategoryCreateDto();

    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            var category = await DbContext.Categories.FindAsync(Id.Value);
            if (category != null)
            {
                categoryDto = new CategoryCreateDto
                {
                    Name = category.Name,
                    Description = category.Description,
                    ImageUrl = category.ImageUrl
                };
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        if (Id.HasValue)
        {
            var category = await DbContext.Categories.FindAsync(Id.Value);
            if (category != null)
            {
                category.Name = categoryDto.Name;
                category.Description = categoryDto.Description;
                category.ImageUrl = categoryDto.ImageUrl;
                DbContext.Categories.Update(category);
            }
        }
        else
        {
            var category = new Category
            {
                Name = categoryDto.Name,
                Description = categoryDto.Description,
                ImageUrl = categoryDto.ImageUrl
            };
            DbContext.Categories.Add(category);
        }

        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/categories");
    }
}
